name: Backend CI/CD

on:
  push:
    branches: [ "master", "develop", "refacto/*" ]
  pull_request:
    branches: [ "master", "develop" ]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [ 3.11, 3.12, 3.13 ]

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpassword
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements-dev.txt

      - name: Wait for Postgres to be ready
        run: |
          for i in {1..30}; do
            pg_isready -h localhost -p 5432 && break
            echo "Waiting for postgres... ($i/30)"
            sleep 1
          done

      - name: Lint with Ruff
        run: |
          pip install ruff
          ruff check backend/app

      - name: Run tests with Pytest
        env:
          DATABASE_URL: "postgresql+asyncpg://testuser:testpassword@localhost:5432/testdb"
        run: |
          pytest --maxfail=2 --disable-warnings --tb=short backend/tests
