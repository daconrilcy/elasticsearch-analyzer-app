{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://ton-org/mapping-dsl/2-2.schema.json",
  "title": "Elasticsearch Mapping DSL Schema V2.2",
  "description": "Schéma V2.2 pour la validation du DSL de mapping CSV/JSON vers index Elasticsearch avec support des containers (object/nested), opérations array-aware et options ES avancées",
  "type": "object",
  "required": ["index", "globals", "id_policy", "fields", "dsl_version"],
  "properties": {
    "dsl_version": {
      "type": "string",
      "description": "Version du DSL (ex: '1.0', '1.1', '2.0', '2.1', '2.2')",
      "pattern": "^\\d+\\.\\d+$",
      "default": "2.2"
    },
    "containers": {
      "type": "array",
      "description": "Définition des containers (object/nested) pour la structure ES",
      "items": {
        "type": "object",
        "required": ["path", "type"],
        "properties": {
          "path": {
            "type": "string",
            "description": "Chemin du container (ex: 'contacts[]', 'address')",
            "pattern": "^[a-zA-Z0-9_]+(\\[\\])?(\\.[a-zA-Z0-9_]+(\\[\\])?)*$"
          },
          "type": {
            "type": "string",
            "enum": ["object", "nested"],
            "description": "Type Elasticsearch du container"
          }
        },
        "additionalProperties": false
      },
      "default": []
    },
    "index": {
      "type": "string",
      "description": "Nom de l'index Elasticsearch cible",
      "minLength": 1,
      "pattern": "^[a-z0-9_-]+$"
    },
    "globals": {
      "type": "object",
      "required": ["nulls", "bool_true", "bool_false", "decimal_sep", "thousands_sep", "date_formats", "default_tz", "empty_as_null", "preview"],
      "properties": {
        "nulls": {
          "type": "array",
          "items": {"type": "string"},
          "description": "Valeurs considérées comme nulles"
        },
        "bool_true": {
          "type": "array",
          "items": {"type": "string"},
          "description": "Valeurs considérées comme true"
        },
        "bool_false": {
          "type": "array",
          "items": {"type": "string"},
          "description": "Valeurs considérées comme false"
        },
        "decimal_sep": {
          "type": "string",
          "description": "Séparateur décimal"
        },
        "thousands_sep": {
          "type": "string",
          "description": "Séparateur de milliers"
        },
        "date_formats": {
          "type": "array",
          "items": {"type": "string"},
          "description": "Formats de date supportés"
        },
        "default_tz": {
          "type": "string",
          "description": "Fuseau horaire par défaut"
        },
        "empty_as_null": {
          "type": "boolean",
          "description": "Traiter les champs vides comme null"
        },
        "preview": {
          "type": "object",
          "properties": {
            "sample_size": {"type": "integer", "minimum": 1},
            "seed": {"type": "integer"}
          }
        }
      }
    },
    "id_policy": {
      "type": "object",
      "required": ["from", "op", "sep", "on_conflict"],
      "properties": {
        "from": {
          "type": "array",
          "items": {"type": "string"},
          "minItems": 1,
          "description": "Champs source pour la génération de l'ID"
        },
        "op": {
          "type": "string",
          "enum": ["concat", "hash"],
          "description": "Opération pour générer l'ID"
        },
        "sep": {
          "type": "string",
          "description": "Séparateur pour la concaténation"
        },
        "on_conflict": {
          "type": "string",
          "enum": ["error", "overwrite", "skip"],
          "description": "Comportement en cas de conflit d'ID"
        }
      }
    },
    "fields": {
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "object",
        "required": ["target", "type", "input", "pipeline"],
        "properties": {
          "target": {
            "type": "string",
            "description": "Chemin du champ cible dans l'index ES",
            "pattern": "^[a-zA-Z_][a-zA-Z0-9_.]*$"
          },
          "type": {
            "type": "string",
            "enum": ["text", "keyword", "long", "double", "date", "boolean", "geo_point", "geo_shape"],
            "description": "Type Elasticsearch"
          },
          "format": {
            "type": "string",
            "description": "Format spécifique au type (ex: date_format pour date)"
          },
          "input": {
            "type": "array",
            "items": {
              "type": "object",
              "required": ["kind"],
              "properties": {
                "kind": {
                  "type": "string",
                  "enum": ["column", "literal", "jsonpath"],
                  "description": "Type d'entrée"
                },
                "name": {
                  "type": "string",
                  "description": "Nom de la colonne (pour kind: column)"
                },
                "value": {
                  "type": ["string", "number", "boolean"],
                  "description": "Valeur littérale (pour kind: literal)"
                },
                "expr": {
                  "type": "string",
                  "maxLength": 1000,
                  "description": "Expression JSONPath (pour kind: jsonpath)"
                }
              }
            }
          },
          "pipeline": {
            "type": "array",
            "items": {
              "type": "object",
              "required": ["op"],
              "properties": {
                "op": {
                  "type": "string",
                  "enum": [
                    "trim", "lower", "lowercase", "upper", "uppercase", "split", "regex_replace", "replace", "date_parse", 
                    "geo_parse", "cast", "map", "take", "join", "flatten", 
                    "length", "literal", "regex_extract", "zip", "objectify",
                    "filter", "slice", "unique", "sort"
                  ],
                  "description": "Opération de transformation"
                },
                "params": {
                  "type": "object",
                  "description": "Paramètres de l'opération"
                },
                "then": {
                  "type": "array",
                  "description": "Sous-pipeline pour l'opération 'map'",
                  "items": {
                    "type": "object",
                    "required": ["op"],
                    "properties": {
                      "op": {"type": "string"},
                      "params": {"type": "object"}
                    }
                  }
                },
                "which": {
                  "oneOf": [
                    {"enum": ["first", "last"]},
                    {"type": "integer", "minimum": 0}
                  ],
                  "description": "Sélecteur pour l'opération 'take' (first, last, ou index)"
                },
                "sep": {
                  "type": "string",
                  "description": "Séparateur pour l'opération 'join'"
                }
              }
            }
          },
          "analyzer": {
            "type": "string",
            "description": "Nom de l'analyseur à appliquer (uniquement pour type text)"
          },
          "normalizer": {
            "type": "string",
            "description": "Nom du normaliseur à appliquer (uniquement pour type keyword)"
          },
          "options": {
            "type": "object",
            "description": "Options spécifiques au type Elasticsearch"
          },
          "copy_to": {
            "type": "array",
            "items": {"type": "string"},
            "description": "Champs cibles pour la copie des valeurs"
          },
          "ignore_above": {
            "type": "integer",
            "minimum": 1,
            "description": "Longueur maximale pour les champs keyword"
          },
          "null_value": {
            "description": "Valeur par défaut pour les champs null"
          },
          "multi_fields": {
            "type": "array",
            "items": {
              "type": "object",
              "required": ["name", "type"],
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Nom du sous-champ",
                  "pattern": "^[a-zA-Z_][a-zA-Z0-9_]*$"
                },
                "type": {
                  "type": "string",
                  "enum": ["text", "keyword", "integer", "long", "double", "date", "boolean", "ip", "geo_point", "geo_shape"],
                  "description": "Type du sous-champ"
                },
                "analyzer": {
                  "type": "string",
                  "description": "Analyseur pour le sous-champ"
                },
                "normalizer": {
                  "type": "string",
                  "description": "Normaliseur pour le sous-champ"
                }
              }
            }
          }
        }
      }
    },
    "settings": {
      "type": "object",
      "properties": {
        "analysis": {
          "type": "object",
          "properties": {
            "analyzer": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "type": {"type": "string"},
                  "tokenizer": {"type": "string"},
                  "filter": {"type": "array", "items": {"type": "string"}},
                  "char_filter": {"type": "array", "items": {"type": "string"}}
                }
              }
            },
            "normalizer": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "type": {"type": "string", "enum": ["custom"]},
                  "filter": {"type": "array", "items": {"type": "string"}},
                  "char_filter": {"type": "array", "items": {"type": "string"}}
                }
              }
            }
          }
        }
      }
    },
    "dynamic_templates": {
      "type": "array",
      "items": {"type": "object"},
      "description": "Templates dynamiques Elasticsearch",
      "default": []
    },
    "runtime_fields": {
      "type": "object",
      "additionalProperties": {"type": "object"},
      "description": "Champs runtime Elasticsearch",
      "default": {}
    }
  },
  "definitions": {
    "OpTrim": {
      "type": "object",
      "required": ["op"],
      "properties": {
        "op": {"const": "trim"}
      },
      "additionalProperties": false
    },
    "OpLower": {
      "type": "object",
      "required": ["op"],
      "properties": {
        "op": {"const": "lower"}
      },
      "additionalProperties": false
    },
    "OpUpper": {
      "type": "object",
      "required": ["op"],
      "properties": {
        "op": {"const": "upper"}
      },
      "additionalProperties": false
    },
    "OpSplit": {
      "type": "object",
      "required": ["op"],
      "properties": {
        "op": {"const": "split"},
        "sep": {"type": "string"}
      },
      "additionalProperties": false
    },
    "OpRegexReplace": {
      "type": "object",
      "required": ["op", "pattern", "repl"],
      "properties": {
        "op": {"const": "regex_replace"},
        "pattern": {"type": "string", "maxLength": 2000},
        "repl": {"type": "string"}
      },
      "additionalProperties": false
    },
    "OpDateParse": {
      "type": "object",
      "required": ["op"],
      "properties": {
        "op": {"const": "date_parse"},
        "formats": {"type": "array", "items": {"type": "string"}},
        "assume_tz": {"type": "string"}
      },
      "additionalProperties": false
    },
    "OpGeoParse": {
      "type": "object",
      "required": ["op", "format"],
      "properties": {
        "op": {"const": "geo_parse"},
        "format": {"enum": ["latlon"]}
      },
      "additionalProperties": false
    },
    "OpNumberParse": {
      "type": "object",
      "required": ["op"],
      "properties": {
        "op": {"const": "cast"},
        "to": {"enum": ["long", "double"]}
      },
      "additionalProperties": false
    },
    "OpBooleanParse": {
      "type": "object",
      "required": ["op"],
      "properties": {
        "op": {"const": "cast"},
        "to": {"const": "boolean"}
      },
      "additionalProperties": false
    },
    "OpMap": {
      "type": "object",
      "required": ["op", "then"],
      "properties": {
        "op": {"const": "map"},
        "then": {
          "type": "array",
          "items": {
            "oneOf": [
              {"$ref": "#/definitions/OpTrim"},
              {"$ref": "#/definitions/OpLower"},
              {"$ref": "#/definitions/OpUpper"},
              {"$ref": "#/definitions/OpSplit"},
              {"$ref": "#/definitions/OpRegexReplace"},
              {"$ref": "#/definitions/OpDateParse"},
              {"$ref": "#/definitions/OpGeoParse"},
              {"$ref": "#/definitions/OpNumberParse"},
              {"$ref": "#/definitions/OpBooleanParse"},
              {"$ref": "#/definitions/OpMap"},
              {"$ref": "#/definitions/OpTake"},
              {"$ref": "#/definitions/OpJoin"},
              {"$ref": "#/definitions/OpFlatten"},
              {"$ref": "#/definitions/OpLength"},
              {"$ref": "#/definitions/OpLiteral"},
              {"$ref": "#/definitions/OpRegexExtract"}
            ]
          }
        }
      },
      "additionalProperties": false
    },
    "OpTake": {
      "type": "object",
      "required": ["op", "which"],
      "properties": {
        "op": {"const": "take"},
        "which": {
          "oneOf": [
            {"enum": ["first", "last"]},
            {"type": "integer", "minimum": 0}
          ]
        }
      },
      "additionalProperties": false
    },
    "OpJoin": {
      "type": "object",
      "required": ["op", "sep"],
      "properties": {
        "op": {"const": "join"},
        "sep": {"type": "string"}
      },
      "additionalProperties": false
    },
    "OpFlatten": {
      "type": "object",
      "required": ["op"],
      "properties": {
        "op": {"const": "flatten"}
      },
      "additionalProperties": false
    },
    "OpLength": {
      "type": "object",
      "required": ["op"],
      "properties": {
        "op": {"const": "length"}
      },
      "additionalProperties": false
    },
    "OpLiteral": {
      "type": "object",
      "required": ["op", "value"],
      "properties": {
        "op": {"const": "literal"},
        "value": {}
      },
      "additionalProperties": false
    },
            "OpRegexExtract": {
          "type": "object",
          "required": ["op", "pattern"],
          "properties": {
            "op": {"const": "regex_extract"},
            "pattern": {"type": "string", "maxLength": 2000},
            "group": {"type": "integer", "minimum": 0, "default": 1},
            "flags": {"type": "string", "pattern": "^[ims]*$"}
          },
          "additionalProperties": false
        },
        "OpZip": {
          "type": "object",
          "required": ["op", "with"],
          "properties": {
            "op": {"const": "zip"},
            "with": {
              "type": "array",
              "items": {
                "oneOf": [
                  {"type": "object", "required": ["kind", "expr"], "properties": {"kind": {"const": "jsonpath"}, "expr": {"type": "string", "maxLength": 1000}}, "additionalProperties": false},
                  {"type": "object", "required": ["kind", "name"], "properties": {"kind": {"const": "column"}, "name": {"type": "string"}}, "additionalProperties": false},
                  {"type": "object", "required": ["kind", "value"], "properties": {"kind": {"const": "literal"}, "value": {}}, "additionalProperties": false}
                ]
              }
            },
            "fill": {}
          },
          "additionalProperties": false
        },
        "OpObjectify": {
          "type": "object",
          "required": ["op", "fields"],
          "properties": {
            "op": {"const": "objectify"},
            "fields": {
              "type": "object",
              "additionalProperties": {
                "oneOf": [
                  {"type": "object", "required": ["kind", "expr"], "properties": {"kind": {"const": "jsonpath"}, "expr": {"type": "string", "maxLength": 1000}}, "additionalProperties": false},
                  {"type": "object", "required": ["kind", "name"], "properties": {"kind": {"const": "column"}, "name": {"type": "string"}}, "additionalProperties": false},
                  {"type": "object", "required": ["kind", "value"], "properties": {"kind": {"const": "literal"}, "value": {}}, "additionalProperties": false}
                ]
              }
            },
            "fill": {},
            "strict": {"type": "boolean", "default": false}
          },
          "additionalProperties": false
        },
        "OpFilter": {
          "type": "object",
          "required": ["op", "cond"],
          "properties": {
            "op": {"const": "filter"},
            "cond": {"type": "object"}
          },
          "additionalProperties": false
        },
        "OpSlice": {
          "type": "object",
          "required": ["op"],
          "properties": {
            "op": {"const": "slice"},
            "start": {"type": "integer", "default": 0},
            "end": {"type": ["integer", "null"], "default": null}
          },
          "additionalProperties": false
        },
        "OpUnique": {
          "type": "object",
          "required": ["op"],
          "properties": {
            "op": {"const": "unique"},
            "by": {"type": ["string", "null"], "default": null}
          },
          "additionalProperties": false
        },
        "OpSort": {
          "type": "object",
          "required": ["op"],
          "properties": {
            "op": {"const": "sort"},
            "by": {"type": ["string", "null"], "default": null},
            "order": {"enum": ["asc", "desc"], "default": "asc"},
            "numeric": {"type": "boolean", "default": false},
            "missing_last": {"type": "boolean", "default": true}
          },
          "additionalProperties": false
        }
  }
}
