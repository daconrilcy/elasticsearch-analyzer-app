{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://ton-org/mapping-dsl/1-0.schema.json",
  "title": "Elasticsearch Mapping DSL Schema",
  "description": "Schéma pour la validation du DSL de mapping CSV/JSON vers index Elasticsearch",
  "type": "object",
  "required": ["index", "globals", "id_policy", "fields", "dsl_version"],
  "properties": {
    "dsl_version": {
      "type": "string",
      "description": "Version du DSL (ex: '1.0', '1.1')",
      "pattern": "^\\d+\\.\\d+$",
      "default": "1.0"
    },
    "index": {
      "type": "string",
      "description": "Nom de l'index Elasticsearch cible",
      "minLength": 1,
      "pattern": "^[a-z0-9_-]+$"
    },
    "globals": {
      "type": "object",
      "required": ["nulls", "bool_true", "bool_false", "decimal_sep", "thousands_sep", "date_formats", "default_tz", "empty_as_null", "preview"],
      "properties": {
        "nulls": {
          "type": "array",
          "items": {"type": "string"},
          "description": "Valeurs considérées comme nulles"
        },
        "bool_true": {
          "type": "array",
          "items": {"type": "string"},
          "description": "Valeurs considérées comme true"
        },
        "bool_false": {
          "type": "array",
          "items": {"type": "string"},
          "description": "Valeurs considérées comme false"
        },
        "decimal_sep": {
          "type": "string",
          "description": "Séparateur décimal"
        },
        "thousands_sep": {
          "type": "string",
          "description": "Séparateur de milliers"
        },
        "date_formats": {
          "type": "array",
          "items": {"type": "string"},
          "description": "Formats de date supportés"
        },
        "default_tz": {
          "type": "string",
          "description": "Fuseau horaire par défaut"
        },
        "empty_as_null": {
          "type": "boolean",
          "description": "Traiter les champs vides comme null"
        },
        "preview": {
          "type": "object",
          "properties": {
            "sample_size": {"type": "integer", "minimum": 1},
            "seed": {"type": "integer"}
          }
        }
      }
    },
    "id_policy": {
      "type": "object",
      "required": ["from", "op", "sep", "on_conflict"],
      "properties": {
        "from": {
          "type": "array",
          "items": {"type": "string"},
          "minItems": 1,
          "description": "Champs source pour la génération de l'ID"
        },
        "op": {
          "type": "string",
          "enum": ["concat", "hash"],
          "description": "Opération pour générer l'ID"
        },
        "sep": {
          "type": "string",
          "description": "Séparateur pour la concaténation"
        },
        "on_conflict": {
          "type": "string",
          "enum": ["error", "overwrite", "skip"],
          "description": "Comportement en cas de conflit d'ID"
        }
      }
    },
    "fields": {
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "object",
        "required": ["target", "type", "input", "pipeline"],
        "properties": {
          "target": {
            "type": "string",
            "description": "Chemin du champ cible dans l'index ES",
            "pattern": "^[a-zA-Z_][a-zA-Z0-9_.]*$"
          },
          "type": {
            "type": "string",
            "enum": ["text", "keyword", "long", "double", "date", "boolean", "geo_point", "geo_shape"],
            "description": "Type Elasticsearch"
          },
          "format": {
            "type": "string",
            "description": "Format spécifique au type (ex: date_format pour date)"
          },
          "input": {
            "type": "array",
            "items": {
              "type": "object",
              "required": ["kind", "name"],
              "properties": {
                "kind": {
                  "type": "string",
                  "enum": ["column", "constant", "expression"],
                  "description": "Type d'entrée"
                },
                "name": {
                  "type": "string",
                  "description": "Nom de la colonne ou valeur constante"
                }
              }
            }
          },
          "pipeline": {
            "type": "array",
            "items": {
              "type": "object",
              "required": ["op"],
              "properties": {
                "op": {
                  "type": "string",
                  "enum": ["trim", "lowercase", "uppercase", "split", "replace", "parse_date", "parse_geo", "parse_number", "parse_boolean"],
                  "description": "Opération de transformation"
                },
                "params": {
                  "type": "object",
                  "description": "Paramètres de l'opération"
                }
              }
            }
          },
          "analyzer": {
            "type": "string",
            "description": "Nom de l'analyseur à appliquer (uniquement pour type text)"
          },
          "normalizer": {
            "type": "string",
            "description": "Nom du normaliseur à appliquer (uniquement pour type keyword)"
          },
          "options": {
            "type": "object",
            "description": "Options spécifiques au type Elasticsearch"
          },
          "multi_fields": {
            "type": "array",
            "items": {
              "type": "object",
              "required": ["name", "type"],
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Nom du sous-champ",
                  "pattern": "^[a-zA-Z_][a-zA-Z0-9_]*$"
                },
                "type": {
                  "type": "string",
                  "enum": ["text", "keyword", "long", "double", "date", "boolean"],
                  "description": "Type du sous-champ"
                },
                "analyzer": {
                  "type": "string",
                  "description": "Analyseur pour le sous-champ"
                },
                "normalizer": {
                  "type": "string",
                  "description": "Normaliseur pour le sous-champ"
                }
              }
            }
          }
        }
      }
    },
    "settings": {
      "type": "object",
      "properties": {
        "analysis": {
          "type": "object",
          "properties": {
            "analyzer": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "type": {"type": "string"},
                  "tokenizer": {"type": "string"},
                  "filter": {"type": "array", "items": {"type": "string"}},
                  "char_filter": {"type": "array", "items": {"type": "string"}}
                }
              }
            },
            "normalizer": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "type": {"type": "string", "enum": ["custom"]},
                  "filter": {"type": "array", "items": {"type": "string"}},
                  "char_filter": {"type": "array", "items": {"type": "string"}}
                }
              }
            }
          }
        }
      }
    }
  }
}
